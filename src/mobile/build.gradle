apply plugin: 'com.android.application'
apply plugin: 'io.fabric'
apply plugin: 'realm-android'
apply from: '../gradle/git-version.gradle'

def gitVersionData = getGitVersionData()

gitVersionData.major = 0
gitVersionData.minor = 0

println "[git-version-data] " + gitVersionData

android {
	signingConfigs {
		config {
			keyAlias 'release'
			keyPassword 'release'
			storeFile file("$rootDir/../res/keys/keystore.jks")
			storePassword 'keystore'
		}
	}
	compileSdkVersion 26
	buildToolsVersion "26.0.2"
	defaultConfig {
		applicationId "com.ilusons.harmony"
		minSdkVersion 21
		targetSdkVersion 26
		versionCode gitVersionData.code
		versionName "${gitVersionData.major}.${gitVersionData.minor}.${gitVersionData.patch}-${gitVersionData.build}"
		testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
		vectorDrawables.useSupportLibrary = true
		multiDexEnabled = true
	}
	flavorDimensions "versionCode"
	buildTypes {
		debug {
			buildConfigField "String", "AD_PUB_ID", "\"ca-app-pub-4739450309172378~5670478444\""
			buildConfigField "String", "AD_UNIT_ID_NE1", "\"ca-app-pub-3940256099942544/2177258514\""
			buildConfigField "String", "AD_UNIT_ID_I1", "\"ca-app-pub-4739450309172378/6929788446\""

			versionNameSuffix '-debug'

			ext.alwaysUpdateBuildId = false
		}
		release {
			buildConfigField "String", "AD_PUB_ID", "\"ca-app-pub-4739450309172378~5670478444\""
			buildConfigField "String", "AD_UNIT_ID_NE1", "\"ca-app-pub-4739450309172378/4054144442\""
			buildConfigField "String", "AD_UNIT_ID_I1", "\"ca-app-pub-4739450309172378/6929788446\""

			minifyEnabled true
			proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
			versionNameSuffix '-release'
			signingConfig signingConfigs.config
			debuggable false
			jniDebuggable false
			renderscriptDebuggable false
			zipAlignEnabled true
		}
		releaseAlpha {
			buildConfigField "String", "AD_PUB_ID", "\"ca-app-pub-4739450309172378~5670478444\""
			buildConfigField "String", "AD_UNIT_ID_NE1", "\"ca-app-pub-4739450309172378/4054144442\""
			buildConfigField "String", "AD_UNIT_ID_I1", "\"ca-app-pub-4739450309172378/6929788446\""

			minifyEnabled true
			proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
			versionNameSuffix '-alpha'
			signingConfig signingConfigs.config
			debuggable false
			jniDebuggable false
			renderscriptDebuggable false
			zipAlignEnabled true
		}
		releaseBeta {
			buildConfigField "String", "AD_PUB_ID", "\"ca-app-pub-4739450309172378~5670478444\""
			buildConfigField "String", "AD_UNIT_ID_NE1", "\"ca-app-pub-4739450309172378/4054144442\""
			buildConfigField "String", "AD_UNIT_ID_I1", "\"ca-app-pub-4739450309172378/6929788446\""

			minifyEnabled true
			proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
			versionNameSuffix '-beta'
			signingConfig signingConfigs.config
			debuggable false
			jniDebuggable false
			renderscriptDebuggable false
			zipAlignEnabled true
		}
	}
	productFlavors {
		main {
		}
	}
	dexOptions {
	}
	compileOptions {
		sourceCompatibility JavaVersion.VERSION_1_7
		targetCompatibility JavaVersion.VERSION_1_7
	}
	externalNativeBuild {
		ndkBuild {
			path "../../res/libs/chromaprint-android/jni/Android.mk"
		}
	}
	sourceSets {
		main {
			java.srcDirs += '../../res/libs/chromaprint-android/src'
			res.srcDirs = ['src/main/res']
		}
	}
	applicationVariants.all { variant ->
		// Git tag
		if (variant.buildType.name == "release" || variant.buildType.name == "releaseAlpha" || variant.buildType.name == "releaseBeta") {
			variant.assemble.doLast {
				if (gitVersionData.clean) {
					getAndTagCurrentRelease(gitVersionData)
				}
			}
		}

	}
	packagingOptions {
		exclude 'META-INF/DEPENDENCIES.txt'
		exclude 'META-INF/LICENSE.txt'
		exclude 'META-INF/NOTICE.txt'
		exclude 'META-INF/NOTICE'
		exclude 'META-INF/LICENSE'
		exclude 'META-INF/DEPENDENCIES'
		exclude 'META-INF/notice.txt'
		exclude 'META-INF/license.txt'
		exclude 'META-INF/dependencies.txt'
		exclude 'META-INF/LGPL2.1'
	}
	useLibrary 'org.apache.http.legacy'

	testOptions {
		unitTests.returnDefaultValues = true
	}
}

repositories {
	maven {
		url 's3://assets.scand.com/maven/repository/RealmBrowser'
		credentials(AwsCredentials) {
			accessKey "AKIAIQXKP5XUVFLEEAKA"
			secretKey "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"
		}
	}
}

dependencies {
	implementation fileTree(include: ['*.jar'], dir: 'libs')
	androidTestImplementation('com.android.support.test.espresso:espresso-core:2.2.2', {
		exclude group: 'com.android.support', module: 'support-annotations'
	})
	// TODO: Later ? wearApp project(':wear')
	api group: 'org.apache.httpcomponents', name: 'httpcore', version: '4.4.6'
	//noinspection GradleCompatible
	api 'com.android.support:appcompat-v7:26.1.0'
	api 'com.android.support:mediarouter-v7:26.1.0'
	api 'com.android.support:support-core-utils:26.1.0'
	api 'com.android.support.constraint:constraint-layout:1.0.2'
	api 'com.android.support:design:26.1.0'
	api 'com.android.support:palette-v7:26.1.0'
	api 'com.android.support:percent:26.1.0'
	api 'com.android.support:recyclerview-v7:26.1.0'
	api 'com.android.support:cardview-v7:26.1.0'
	api 'com.squareup.picasso:picasso:2.5.2'
	api 'commons-codec:commons-codec:1.10'
	api 'com.facebook.fresco:fresco:1.2.0'
	api 'org.jsoup:jsoup:1.10.2'
	api 'com.google.code.gson:gson:2.8.0'
	api 'com.wang.avi:library:2.1.3'
	api 'com.h6ah4i.android:openslmediaplayer:0.7.5'
	api 'com.h6ah4i.android.widget.verticalseekbar:verticalseekbar:0.7.2'
	api 'commons-io:commons-io:2.5'
	api 'com.google.firebase:firebase-messaging:11.4.2'
	api 'com.google.firebase:firebase-database:11.4.2'
	api 'me.tankery.lib:circularSeekBar:1.1.3'
	api 'org.apache.commons:commons-lang3:3.4'
	api 'com.nononsenseapps:filepicker:4.1.0'
	api 'com.code-troopers.betterpickers:library:3.1.0'
	api 'com.airbnb.android:lottie:2.0.0'
	api 'com.github.iammert:MaterialIntroView:1.6.0'
	api 'com.jonathanfinerty.once:once:1.2.2'
	api 'com.cleveroad:audiovisualization:1.0.0'
	api('com.h6ah4i.android.widget.advrecyclerview:advrecyclerview:0.10.6@aar') {
		transitive = true
	}
	api('com.crashlytics.sdk.android:crashlytics:2.7.1@aar') {
		transitive = true
	}
	api 'jp.wasabeef:blurry:2.1.1'
	api 'com.squareup.okhttp3:okhttp:3.9.0'
	api 'de.u-mass:lastfm-java:0.1.2'
	api 'com.github.tozny:java-aes-crypto:1.1.0'
	api 'com.github.PhilJay:MPAndroidChart:v3.0.2'
	api 'com.github.turing-tech:MaterialScrollBar:12.5.0a'
	api 'com.spotify.android:auth:1.0.0-alpha'
	api 'com.spotify.sdk:spotify-player-24-noconnect-2.20b@aar'
	api 'com.sdsmdg.harjot:croller:1.0.5'
	api 'com.simplecityapps:recyclerview-fastscroll:1.0.16'
	api 'com.beloo.widget:ChipsLayoutManager:0.3.7@aar'
	api ('com.mikepenz:fastadapter:2.6.3@aar') {
		transitive = true
	}
	api 'com.mikepenz:fastadapter-commons:2.6.3@aar'
	api 'com.mikepenz:fastadapter-extensions:2.6.3@aar'
	api 'com.mikepenz:materialize:1.0.3@aar'
	api('com.scand:realm-browser:0.1.15') {
		exclude group: 'io.realm'
	}
	// debugApi 'com.squareup.leakcanary:leakcanary-android:1.5.1'
	debugApi 'com.squareup.leakcanary:leakcanary-android-no-op:1.5.1'
	releaseApi 'com.squareup.leakcanary:leakcanary-android-no-op:1.5.1'
	releaseAlphaApi 'com.squareup.leakcanary:leakcanary-android-no-op:1.5.1'
	releaseBetaApi 'com.squareup.leakcanary:leakcanary-android-no-op:1.5.1'
	testApi 'com.squareup.leakcanary:leakcanary-android-no-op:1.5.1'
	testApi 'junit:junit:4.12'
	testApi 'org.mockito:mockito-core:1.10.19'
	testApi "org.powermock:powermock-module-junit4:1.6.2"
	testApi "org.powermock:powermock-module-junit4-rule:1.6.2"
	testApi "org.powermock:powermock-api-mockito:1.6.2"
	testApi "org.powermock:powermock-classloading-xstream:1.6.2"
}

android {
	configurations.all {
		resolutionStrategy.force 'com.google.code.findbugs:jsr305:2.0.1'
	}
}

afterEvaluate {
	def flavors = []
	def types = []

	android.applicationVariants.all { variant ->
		def flyp = variant.name.split("(?=\\p{Upper})")
		if (!flavors.contains(flyp[0])) {
			flavors.add(flyp[0])
		}
		if (!types.contains(flyp[1])) {
			types.add(flyp[1])
		}
	}

	tasks.all { Task task ->

		for (String fl : flavors) {
			for (String ype : types) {
				if (task.name.contains("generate${fl.capitalize()}${ype.capitalize()}Resources") ||
						task.name.contains("merge${fl.capitalize()}${ype.capitalize()}Resources")) {
					task.outputs.upToDateWhen { false }
				}
			}
		}
	}
}

realm {
	syncEnabled = true
}

apply plugin: 'com.google.gms.google-services'